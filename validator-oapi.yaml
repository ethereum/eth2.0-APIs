openapi: "3.0.3"

info:
  title: "Eth2 Validator API"
  description: |
    API specification for a validator client, which enables users to manage validator keystores.

    All requests by default send and receive JSON, and as such should have either or both of the "Content-Type: application/json"
    and "Accept: application/json" headers.

    All sensitive routes are be authenticated. There exists a single password per validator client binary such that multiple
    users are not supported.
  version: "Dev - Eth2Spec v1.0.1"
  contact:
    name: Ethereum Github
    url: https://github.com/ethereum/eth2.0-apis/issues
  license:
    name: "Apache 2.0"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"

servers:
  - url: "{server_url}"
    variables:
      server_url:
        description: "Validator API url"
        default: "http://public-mainnet-node.ethereum.org/api"

tags:
  - name: Accounts
    description: Endpoints to manage validator accounts.
  - name: SlashingProtection
    description: Endpoints to import and export slashing protection db data.
  - name: AccountAuth
    description: Endpoints to authenticate accounts requests.

paths:
  /eth/v1/accounts:
    $ref: "./apis/accounts/index.yaml"

  /eth/v1/accounts/slashing_protection:
    $ref: "./apis/accounts/slashing_protection.yaml"

  /eth/v1/accounts/login:
    $ref: "./apis/accounts/auth/login.yaml"
  /eth/v1/accounts/signup:
    $ref: "./apis/accounts/auth/signup.yaml"
  /eth/v1/accounts/logout:
    $ref: "./apis/accounts/auth/logout.yaml"
  /eth/v1/accounts/change_password:
    $ref: "./apis/accounts/auth/change_password.yaml"

components:
  responses:
    Unauthorized:
      $ref: "./types/http.yaml#/Unauthorized"
    Forbidden:
      $ref: "./types/http.yaml#/Forbidden"
    InternalError:
      $ref: "./types/http.yaml#/InternalError"

  securitySchemes:
    cookieAuth: # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: SESSION # cookie name
